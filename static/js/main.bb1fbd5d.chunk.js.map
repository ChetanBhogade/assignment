{"version":3,"sources":["Assets/second-img.jpg","Container/NavbarContainer.js","Container/SignUpPage.js","Container/ProductListPage.js","Components/AddressForm.js","Components/PaymentForm.js","Components/Review.js","Container/CheckoutPage.js","Container/FooterContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavbarContainer","AppBar","position","Toolbar","Button","color","to","className","SignUpPage","Container","maxWidth","Box","boxShadow","bgcolor","p","Avatar","style","fontSize","Typography","component","variant","noValidate","Grid","container","spacing","item","xs","TextField","id","label","autoFocus","fullWidth","type","required","cards","ProductListPage","useState","price","setPrice","category","setCategory","FormControl","InputLabel","Select","labelId","value","onChange","event","target","MenuItem","map","card","key","sm","md","Card","CardMedia","paddingTop","image","img","title","CardContent","gutterBottom","marginBottom","CardActions","size","AddressForm","props","fname","setFname","lname","setLname","addr1","setAddr1","addr2","setAddr2","city","setCity","state","setState","pin","setPin","country","setCountry","name","e","autoComplete","FormControlLabel","control","Checkbox","onClick","finalAddress","sendName","sendAddress","handleSubmit","PaymentForm","setName","number","setNumber","date","setDate","helperText","handleBack","lastNumber","substr","length","payments","detail","sendCard","products","desc","Review","List","disablePadding","product","ListItem","paddingBottom","ListItemText","primary","secondary","fontWeight","marginTop","address","join","direction","payment","Fragment","useStyles","makeStyles","theme","paper","padding","breakpoints","up","stepper","steps","CheckoutPage","classes","activeStep","setActiveStep","setAddress","setCard","getAddress","addr","getCardDetails","cardDatails","Paper","elevation","align","Stepper","Step","StepLabel","step","Error","getStepContent","FooterContainer","Link","rel","href","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bb1fbd5d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/second-img.6daec7c0.jpg\";","import React from \"react\";\r\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./NavbarContainer.css\";\r\n\r\nfunction NavbarContainer() {\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Button color=\"inherit\">\r\n            <Link to=\"/assignment\" className=\"myLink\">Signup</Link>\r\n          </Button>\r\n          <Button color=\"inherit\">\r\n            <Link to=\"/products\" className=\"myLink\">Product List</Link>\r\n          </Button>\r\n          <Button color=\"inherit\">\r\n            <Link to=\"/checkout\" className=\"myLink\">Checkout Page</Link>\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarContainer;\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  Avatar,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\nimport \"./SignUpPage.css\";\r\n\r\nfunction SignUpPage() {\r\n  return (\r\n    <div>\r\n      <Container maxWidth=\"xs\">\r\n        <div className=\"paper\">\r\n          <Box boxShadow={3} bgcolor=\"background.paper\" p={2} className=\"paper\">\r\n            <Avatar className=\"avatar\">\r\n              <LockIcon style={{ fontSize: 50 }} />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign Up\r\n            </Typography>\r\n            <form className=\"myForm\" noValidate>\r\n              <Grid container={true} spacing={2}>\r\n                <Grid item={true} xs={6}>\r\n                  <TextField\r\n                    id=\"fname\"\r\n                    label=\"First Name\"\r\n                    variant=\"outlined\"\r\n                    autoFocus\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item={true} xs={6}>\r\n                  <TextField\r\n                    id=\"lname\"\r\n                    label=\"Last Name\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n                <Grid item={true} xs={12}>\r\n                  <TextField\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item={true} xs={12}>\r\n                  <TextField\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item={true} xs={12}>\r\n                  <TextField\r\n                    id=\"cpassword\"\r\n                    label=\"Confirm Password\"\r\n                    variant=\"outlined\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item={true} xs={12}>\r\n                  <Button variant=\"contained\" fullWidth color=\"secondary\">\r\n                    Submit\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </Box>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpPage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  CardActions,\r\n  Button,\r\n  TextField,\r\n  Avatar,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nimport img from \"../Assets/second-img.jpg\";\r\nimport \"./ProductListPage.css\";\r\n\r\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\nfunction ProductListPage() {\r\n  const [price, setPrice] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const handlePriceChange = (event) => {\r\n    setPrice(event.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (event) => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"cardGrid\" maxWidth=\"md\">\r\n        <div className=\"fliterSection\">\r\n          <div className=\"innerFilter\">\r\n            <h3>Filter By: </h3>\r\n            <FormControl className=\"filterForm\">\r\n              <InputLabel id=\"fliter-by-price\">Price</InputLabel>\r\n              <Select\r\n                labelId=\"fliter-by-price\"\r\n                id=\"demo-simple-select\"\r\n                value={price}\r\n                onChange={handlePriceChange}\r\n              >\r\n                <MenuItem value=\"0 - 10K\">0 - 10K</MenuItem>\r\n                <MenuItem value=\"10K - 50K\">10K - 50K</MenuItem>\r\n                <MenuItem value=\"50K - 100K\">50K - 100K</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControl className=\"filterForm\">\r\n              <InputLabel id=\"fliter-by-price\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"fliter-by-price\"\r\n                id=\"demo-simple-select\"\r\n                value={category}\r\n                onChange={handleCategoryChange}\r\n              >\r\n                <MenuItem value=\"Mobiles\">Mobiles</MenuItem>\r\n                <MenuItem value=\"Cloths\">Cloths</MenuItem>\r\n                <MenuItem value=\"Cameras\">Cameras</MenuItem>\r\n                <MenuItem value=\"Accessories\">Accessories</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <form className=\"searchForm\">\r\n            <TextField id=\"search\" label=\"Search Product\" variant=\"outlined\" />\r\n            <Avatar className=\"searchIcon\">\r\n              <SearchIcon />\r\n            </Avatar>\r\n          </form>\r\n        </div>\r\n        <hr />\r\n        <Grid container className=\"listContainer\" spacing={4}>\r\n          {cards.map((card) => (\r\n            <Grid item key={card} xs={12} sm={6} md={4}>\r\n              <Card className=\"card\">\r\n                <CardMedia\r\n                  style={{ paddingTop: \"56%\" }}\r\n                  image={img}\r\n                  title=\"Image title\"\r\n                />\r\n                <CardContent className=\"cardContent\">\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Product Name\r\n                  </Typography>\r\n                  <Typography style={{ marginBottom: 5 }} color=\"textSecondary\">\r\n                    Category\r\n                  </Typography>\r\n                  <Typography>\r\n                    Short description about product details.\r\n                  </Typography>\r\n                  <h5 className=\"cardPrice\">$ 2050</h5>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\" color=\"primary\">\r\n                    View\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductListPage;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nfunction AddressForm(props) {\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [addr1, setAddr1] = useState(\"\");\r\n  const [addr2, setAddr2] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [state, setState] = useState(\"\");\r\n  const [pin, setPin] = useState(\"\");\r\n  const [country, setCountry] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    const name = `${fname} ${lname}`;\r\n    const finalAddress = [addr1, addr2, city, state, pin, country];\r\n    props.sendName(name);\r\n    props.sendAddress(finalAddress);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping address\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            value={fname}\r\n            onChange={(e) => {\r\n              setFname(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"first-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            value={lname}\r\n            onChange={(e) => {\r\n              setLname(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"last-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Address line 1\"\r\n            value={addr1}\r\n            onChange={(e) => {\r\n              setAddr1(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Address line 2\"\r\n            value={addr2}\r\n            onChange={(e) => {\r\n              setAddr2(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"city\"\r\n            name=\"city\"\r\n            label=\"City\"\r\n            value={city}\r\n            onChange={(e) => {\r\n              setCity(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"shipping address-level2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"state\"\r\n            name=\"state\"\r\n            label=\"State\"\r\n            value={state}\r\n            onChange={(e) => {\r\n              setState(e.target.value);\r\n            }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Zip / Postal code\"\r\n            value={pin}\r\n            onChange={(e) => {\r\n              setPin(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"country\"\r\n            name=\"country\"\r\n            label=\"Country\"\r\n            value={country}\r\n            onChange={(e) => {\r\n              setCountry(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"shipping country\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox color=\"secondary\" name=\"saveAddress\" value=\"yes\" />\r\n            }\r\n            label=\"Use this address for payment details\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <div className=\"myBtn\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            handleSubmit();\r\n          }}\r\n          className=\"btnStyle\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddressForm;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nfunction PaymentForm(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n\r\n  const handleSubmit = () => {\r\n    const lastNumber = number.substr(number.length - 4);\r\n    const payments = [\r\n      { name: \"Card holder\", detail: name },\r\n      { name: \"Card number\", detail: `xxxx-xxxx-xxxx-${lastNumber}` },\r\n      { name: \"Expiry date\", detail: date },\r\n    ];\r\n    props.sendCard(payments)\r\n  };\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cardName\"\r\n            label=\"Name on card\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"cc-name\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            value={number}\r\n            onChange={(e) => {\r\n              setNumber(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"expDate\"\r\n            label=\"Expiry date\"\r\n            value={date}\r\n            onChange={(e) => {\r\n              setDate(e.target.value);\r\n            }}\r\n            fullWidth\r\n            autoComplete=\"cc-exp\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            type=\"password\"\r\n            helperText=\"Last three digits on signature strip\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n            label=\"Remember credit card details for next time\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <div className=\"myBtn\">\r\n        <Button onClick={props.handleBack} className=\"btnStyle\">\r\n          Back\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleSubmit}\r\n          className=\"btnStyle\"\r\n        >\r\n          Next\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PaymentForm;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst products = [\r\n  { name: \"Product 1\", desc: \"A nice thing\", price: \"$9.99\" },\r\n  { name: \"Product 2\", desc: \"Another thing\", price: \"$3.45\" },\r\n  { name: \"Product 3\", desc: \"Something else\", price: \"$6.51\" },\r\n  { name: \"Product 4\", desc: \"Best thing of all\", price: \"$14.11\" },\r\n  { name: \"Shipping\", desc: \"\", price: \"Free\" },\r\n];\r\n\r\nfunction Review(props) {\r\n  return (\r\n    <div>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {products.map((product) => (\r\n          <ListItem\r\n            style={{ paddingTop: 2, paddingBottom: 2 }}\r\n            key={product.name}\r\n          >\r\n            <ListItemText primary={product.name} secondary={product.desc} />\r\n            <Typography variant=\"body2\">{product.price}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem style={{ paddingTop: 2, paddingBottom: 2 }}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\r\n            $34.06\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom style={{ marginTop: 2 }}>\r\n            Shipping\r\n          </Typography>\r\n          <Typography gutterBottom>{props.name}</Typography>\r\n          <Typography gutterBottom>{props.address.join(\", \")}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom style={{ marginTop: 2 }}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {props.card.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Review;\r\n","import React, { useState } from \"react\";\r\nimport AddressForm from \"../Components/AddressForm\";\r\nimport PaymentForm from \"../Components/PaymentForm\";\r\nimport Review from \"../Components/Review\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Container,\r\n} from \"@material-ui/core\";\r\n\r\nimport \"./CheckoutPage.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n}));\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\", \"Review your order\"];\r\n\r\nfunction CheckoutPage() {\r\n  const classes = useStyles();\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [address, setAddress] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [card, setCard] = useState(\"\");\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const getAddress = (addr) => {\r\n    setAddress(addr);\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const getCardDetails = (cardDatails) => {\r\n    setCard(cardDatails);\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const getStepContent = (step) => {\r\n    if (step === 0) {\r\n      return <AddressForm sendAddress={getAddress} sendName={setName} />;\r\n    } else if (step === 1) {\r\n      return <PaymentForm sendCard={getCardDetails} handleBack={handleBack} />;\r\n    } else if (step === 2) {\r\n      return <Review address={address} card={card} name={name} />;\r\n    } else {\r\n      throw new Error(\"Unknown step\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"layout\" maxWidth=\"sm\">\r\n        <Paper elevation={3} className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order\r\n                  confirmation, and will send you an update when your order has\r\n                  shipped.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                {activeStep === steps.length - 1 ? (\r\n                  <div className=\"myBtn\">\r\n                    <Button onClick={handleBack} className=\"btnStyle\">\r\n                      Back\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                      className=\"btnStyle\"\r\n                    >\r\n                      Place order\r\n                    </Button>\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;\r\n","import React from \"react\";\r\nimport { Container, Typography, Link } from \"@material-ui/core\";\r\n\r\nimport \"./FooterContainer.css\";\r\n\r\nfunction FooterContainer() {\r\n  return (\r\n    <div className=\"footerStyle\">\r\n      <Container maxWidth=\"lg\">\r\n        <Typography\r\n          variant=\"subtitle1\"\r\n          align=\"center\"\r\n          color=\"textSecondary\"\r\n          component=\"p\"\r\n        >\r\n          Design And Developed By -{\" \"}\r\n          <Link\r\n            color=\"inherit\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href=\"https://chetanbhogade.github.io/portfolio/\"\r\n          >\r\n            Chetan Bhogade\r\n          </Link>\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FooterContainer;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport NavbarContainer from \"./Container/NavbarContainer\";\nimport SignUpPage from \"./Container/SignUpPage\";\nimport ProductListPage from \"./Container/ProductListPage\";\nimport CheckoutPage from \"./Container/CheckoutPage\";\nimport FooterContainer from \"./Container/FooterContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <NavbarContainer />\n        <div>\n          <Route exact path=\"/assignment\" component={SignUpPage} />\n          <Route exact path=\"/products\" component={ProductListPage} />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n        </div>\n        <FooterContainer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}